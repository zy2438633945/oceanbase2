--disable_query_log
set @@session.explicit_defaults_for_timestamp=off;
--enable_query_log
# owner: peihan.dph
# owner group: SQL3
# description:
#
--disable_warnings
drop table if exists aaaaaaaaaa222222222233333333334444444444555555555566666666661234;
--enable_warnings

create table aaaaaaaaaa222222222233333333334444444444555555555566666666661234 (xxxxxxxxxx222222222233333333334444444444555555555566666666661234 int primary key);

--disable_warnings
drop table if exists aaaaaaaaaa222222222233333333334444444444555555555566666666661234;
--enable_warnings

#--error 1059
create table if not exists bbbbbbbbbb222222222233333333334444444444555555555566666666661234 (yyyyyyyyyy2222222222333333333344444444445555555555666666666612345 int primary key);

--error 1059
create table cccccccccc2222222222333333333344444444445555555555666666666612345 (zzzzzzzzzz222222222233333333334444444444555555555566666666661234 int primary key);

--error 1059
create table dddddddddd2222222222333333333344444444445555555555666666666612345 (ssssssssss2222222222333333333344444444445555555555666666666612345 int primary key);

--disable_warnings
drop table if exists alter_table1;
--enable_warnings

create table alter_table1 (cc1 int primary key); 
ALTER TABLE alter_table1 CHANGE cc1 `hhhhhhhhhh222222222233333333334444444444555555555566666666661234` INT;

--disable_warnings
drop table if exists alter_table1;
--enable_warnings

--disable_warnings
drop table if exists alter_table2;
--enable_warnings

create table alter_table2 (cc2 int primary key); 
#--error 1059
ALTER TABLE alter_table2 CHANGE cc2 `gggggggggg2222222222333333333344444444445555555555666666666612345` INT;

--disable_warnings
drop table if exists alter_table2;
drop database if exists vffvvvvvvv222222222233333333334444444444555555555566666666661234;
--enable_warnings
create database vffvvvvvvv222222222233333333334444444444555555555566666666661234;

drop database if exists vffvvvvvvv222222222233333333334444444444555555555566666666661234;

#--error 1059
create database if not exists vvvvvvvvvv2222222222333333333344444444445555555555666666666612345;
drop database if exists vvvvvvvvvv2222222222333333333344444444445555555555666666666612345;

##when bytes number of name  exceeds 192,return error 1059
--error 1059
create database vvvvvvvvvv2222222222333333333344444444445555555555666666666612345vvvvvvvvvv2222222222333333333344444444445555555555666666666612345vvvvvvvvvv2222222222333333333344444444445555555555666666666a193;
--error 1059
use vvvvvvvvvv2222222222333333333344444444445555555555666666666612345vvvvvvvvvv2222222222333333333344444444445555555555666666666612345vvvvvvvvvv2222222222333333333344444444445555555555666666666a193;
--error 1059
drop database vvvvvvvvvv2222222222333333333344444444445555555555666666666612345vvvvvvvvvv2222222222333333333344444444445555555555666666666612345vvvvvvvvvv2222222222333333333344444444445555555555666666666a193;

##name can not ended with ' '
--error 1102 
create database `adc `;
--error 1102 
drop database `adc `;
--error 1102 
use `adc `;

##when bytes number of name  is between  65 and 191,return error 1102
create database if not exists vvvvvvvvvv2222222222333333333344444444445555555555666666666612a65;
drop database vvvvvvvvvv2222222222333333333344444444445555555555666666666612a65;
--error 1049
use vvvvvvvvvv2222222222333333333344444444445555555555666666666612a65;

#when database name is prefix of '#mysql50#' and end of these alpha '~' ,'.', '\\' ,'/' return error 1102
--error 1102 
create database `#mysql50#~`;
--error 1102 
drop database `#mysql50#~`;
--error 1102 
use `#mysql50#~`;

--error 1102 
create database `#mysql50#.`;
--error 1102 
drop database `#mysql50#.`;
--error 1102 
use `#mysql50#.`;

--error 1102 
create database `#mysql50#\\`;
--error 1102 
drop database `#mysql50#\\`;
--error 1102 
use `#mysql50#\\`;

--error 1102 
create database `#mysql50#/`;
--error 1102 
drop database `#mysql50#/`;
--error 1102 
use `#mysql50#/`;
