--disable_query_log
set @@session.explicit_defaults_for_timestamp=off;
--enable_query_log
#tags: pl
#owner: linlin.xll
#owner group: sql1
#description: test pl bit data type

--result_format 4

--disable_query_log
--disable_result_log
--source mysql_test/include/index_quick_major.inc
--enable_query_log
--enable_result_log

connect (my_obsys,$OBMYSQL_MS0,admin,$OBMYSQL_PWD,test,$OBMYSQL_PORT);
alter system flush plan cache global;
alter system flush pl cache global;
connection default;

use test;

--disable_warnings
drop table if exists my_bit_1;
drop table if exists my_bit_32;
drop table if exists my_bit_64;
drop procedure if exists my_bit_1;
drop procedure if exists my_bit_32;
drop procedure if exists my_bit_64;
drop function if exists my_bit_1;
drop function if exists my_bit_32;
drop function if exists my_bit_64;
--enable_warnings

create table my_bit_1(col bit(1));
create table my_bit_32(col bit(32));
create table my_bit_64(col bit(64));

insert into my_bit_1 values(1);
insert into my_bit_32 values(32);
insert into my_bit_64 values(64);

delimiter |;
create procedure my_bit_1(OUT v bit(1))
begin
  select col from my_bit_1 into v;
end |

create procedure my_bit_32(OUT v bit(32))
begin
  select col from my_bit_32 into v;
end |

create procedure my_bit_64(OUT v bit(64))
begin
  select col from my_bit_64 into v;
end |

create function my_bit_1() returns bit(1)
begin
  declare v bit(1);
  call my_bit_1(v);
  return v;
end |

create function my_bit_32() returns bit(32)
begin
  declare v bit(32);
  call my_bit_32(v);
  return v;
end |

create function my_bit_64() returns bit(64)
begin
  declare v bit(64);
  call my_bit_64(v);
  return v;
end |

delimiter ;|

select cast(my_bit_1() as signed);
select cast(my_bit_32() as signed);
select cast(my_bit_64() as signed);

drop table my_bit_1;
drop table my_bit_32;
drop table my_bit_64;
drop procedure my_bit_1;
drop procedure my_bit_32;
drop procedure my_bit_64;
drop function my_bit_1;
drop function my_bit_32;
drop function my_bit_64;

--disable_warnings
drop function if exists my_bit_bit;
drop function if exists my_bit_char;
drop function if exists my_bit_int;
drop function if exists my_bit_double;
--enable_warnings

delimiter |;
create function my_bit_bit(v bit(32)) returns bit(32)
begin
  set v := v + 1;
  return v;
end |

create function my_bit_char(v bit(1)) returns char(1)
begin
  set v := v + 1;
  return v;
end |

create function my_bit_int(v bit(1)) returns int
begin
  set v := v + 1;
  return v;
end |

create function my_bit_double(v bit(32)) returns double
begin
  set v := v + 1;
  return v;
end |

delimiter ;|
select cast(my_bit_bit(1) as signed);
--error 1406
select my_bit_char(1);
--error 1406
select my_bit_int(1);
select my_bit_double(1);

drop function my_bit_bit;
drop function my_bit_char;
drop function my_bit_int;
drop function my_bit_double;

connection my_obsys;
disconnect my_obsys;






