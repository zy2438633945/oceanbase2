--disable_query_log
set @@session.explicit_defaults_for_timestamp=off;
--enable_query_log
#tags: pl
#owner: linlin.xll
#owner group: sql1
#description: test pl function not support ps, ddl, mutil result

--result_format 4

--disable_query_log
--disable_result_log
--source mysql_test/include/index_quick_major.inc
--enable_query_log
--enable_result_log

use test;

--disable_warnings
drop function if exists my_func;
drop function if exists my_proc;
--enable_warnings

delimiter |;

--error 1336
create function my_func() returns int
begin
  prepare stmt from "select 1";
end |

--error 1336
create function my_func() returns int
begin
  execute stmt;
end |

--error 1336
create function my_func() returns int
begin
  deallocate prepare stmt;
end |

--error 1415
create function my_func() returns int
begin
  select 1;
end |

--error 1422
create function my_func() returns int
begin
  create table my_tab(col int);
end |

create function my_func() returns int
begin
  call my_proc();
  return 1;
end |

create procedure my_proc()
begin
  prepare stmt from 'select 1';
end |

--error 1336
select my_func() |

drop procedure my_proc |
create procedure my_proc()
begin
  execute stmt;
end |

--error 1336
select my_func() |

drop procedure my_proc |
create procedure my_proc()
begin
  deallocate prepare stmt;
end |

--error 1336
select my_func()|

drop procedure my_proc |
create procedure my_proc()
begin
  select 1;
end |

--error 1415
select my_func() |

drop procedure my_proc |
create procedure my_proc()
begin
  create table my_tab(col int);
end |

--error 1422
select my_func() |

drop function my_func|
drop procedure my_proc|


--disable_warnings
drop procedure if exists my_proc1 |
drop procedure if exists my_proc2 |
drop function if exists my_func1 |
drop function if exists my_func2 |
--enable_warnings

create function my_func1() returns int
begin
  call my_proc1();
  return 1;
end |

create procedure my_proc1()
begin
  call my_proc2();
end |

create procedure my_proc2()
begin
  prepare stmt from 'select 1';
end |

--error 1336
select my_func1() |

drop procedure my_proc2 |
create procedure my_proc2()
begin
  select 1;
end |

--error 1415
select my_func1() |

drop procedure my_proc2 |
create procedure my_proc2()
begin
  create table my_tab(col int);
end |

--error 1422
select my_func1() |

drop function my_func1 |
drop procedure my_proc1 |
drop procedure my_proc2 |


create procedure my_proc1()
begin
  select my_func1();
end |

create function my_func1() returns int
begin
  call my_proc2();
  return 1;
end |

create procedure my_proc2()
begin
  create table my_tab(col int);
end |

--error 1422
call my_proc1() |

drop procedure my_proc1|
drop procedure my_proc2|
drop function my_func1|

create function my_func1() returns int
begin
  call my_proc1();
  return 1;
end |

create procedure my_proc1()
begin
  call my_proc2();
end |

create procedure my_proc2()
begin
  create table my_tab(col int);
end |

--error 1422
select my_func1() |

drop procedure my_proc1 |
drop procedure my_proc2 |
drop function my_func1 |

create function my_func1() returns int
begin
  call my_proc1();
  return 1;
end |

create procedure my_proc1()
begin
  select my_func2();
end |

--error 1415
select my_func1() |

drop function my_func1 |
drop procedure my_proc1 |

create function my_func1() returns int
begin
  call my_proc1();
  return 1;
end |

create procedure my_proc1()
begin
  declare v int;
  select my_func2() into v;
end |

create function my_func2() returns int
begin
  call my_proc2();
  return 1;
end |

create procedure my_proc2()
begin
  create table my_tab(col int);
end |

--error 1422
select my_func1() |

drop procedure my_proc1 |
drop procedure my_proc2 |
drop function my_func1 |
drop function my_func2 |




