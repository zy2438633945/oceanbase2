--disable_query_log
set @@session.explicit_defaults_for_timestamp=off;
--enable_query_log
#tags: pl
#owner: linlin.xll
#owner group: sql1
#description: test pl variables more than 12

--result_format 4

--disable_query_log
--disable_result_log
--source mysql_test/include/index_quick_major.inc
--enable_query_log
--enable_result_log

--disable_warnings
drop table if EXISTS result;
drop procedure if exists proc_codegen;
--enable_warnings

create table result(v VARCHAR(400));

delimiter /;

create procedure proc_codegen(
  IN proc_name varchar(20)
  , IN cnt integer
  , IN var_type varchar(10)
  , IN var_default varchar(10)
  , IN var_out varchar(10)
  , OUT proc1 varbinary(65535)
  , OUT proc2 varbinary(65535)
)
begin
  declare code varbinary(65535);
  declare i int default 1;
  set code = concat("CREATE PROCEDURE ", proc_name, cnt, "() BEGIN \n");
  
  set code = concat(code, "DECLARE ");
  while (i < cnt)
  do
    set code = concat(code, "v", i, ",");
    set i = i + 1;
  end while;
  set code = concat(code, "v", cnt, " ", var_type, " default ", var_default, ";\n");
  
  set code = concat(code, "insert into result values(concat('before ", proc_name, cnt, " ',");
  set i = 1;
  while (i < cnt)
  do
    set code = concat(code, "'v", i, "=',", "v", i, ",", "' '", ",");
    set i = i + 1;
  end while;
  set code = concat(code, "'v", i, "=',", "v", cnt, "));\n");

  set code = concat(code, "call ", proc_name, cnt, "_set(");
  set i = 1;
  while (i < cnt)
  do
    set code = concat(code, "v", i, ",");
    set i = i + 1;
  end while;
  set code = concat(code, "v", cnt, ");\n");
  set code = concat(code, "insert into result values(concat('after ", proc_name, cnt, " ',");
  set i = 1;
  while (i < cnt)
  do
    set code = concat(code, "'v", i, "=',", "v", i, ",", "' '", ",");
    set i = i + 1;
  end while;
  set code = concat(code, "'v", i, "=',", "v", cnt, "));\n");
  set code = concat(code, "END\n");
  set proc1 = code;
  set code = '';

  set code = concat("CREATE PROCEDURE ", proc_name, cnt, "_set(");
  set i = 1;
  while (i < cnt)
  do
    set code = concat(code, "OUT v", i, " ", var_type, ",");
    set i = i + 1;
  end while;
  set code = concat(code, "OUT v", i, " ", var_type, ") BEGIN \n");
  set code = concat(code, "set ");
  set i = 1;
  while (i < cnt)
  do
    set code = concat(code, "v", i, "=", var_out, ",");
    set i = i + 1;
  end while;
  set code = concat(code, "v", cnt, "=", var_out, ";\n");
  set code = concat(code, "end;\n");
  set proc2 = code;
end;
/

delimiter ;/

set @body1 = "";
set @body2 = "";
let $var_num = 1;

--disable_warnings
drop procedure if exists sp_var_test1;
drop procedure if exists sp_var_test2;
drop procedure if exists sp_var_test3;
drop procedure if exists sp_var_test4;
drop procedure if exists sp_var_test5;
drop procedure if exists sp_var_test6;
drop procedure if exists sp_var_test7;
drop procedure if exists sp_var_test8;
drop procedure if exists sp_var_test9;
drop procedure if exists sp_var_test10;
drop procedure if exists sp_var_test11;
drop procedure if exists sp_var_test12;
drop procedure if exists sp_var_test13;
drop procedure if exists sp_var_test14;
drop procedure if exists sp_var_test15;
drop procedure if exists sp_var_test16;
drop procedure if exists sp_var_test17;
drop procedure if exists sp_var_test18;
drop procedure if exists sp_var_test19;
drop procedure if exists sp_var_test20;
drop procedure if exists sp_var_test21;
drop procedure if exists sp_var_test22;
drop procedure if exists sp_var_test23;
drop procedure if exists sp_var_test24;

drop procedure if exists sp_var_test1_set;
drop procedure if exists sp_var_test2_set;
drop procedure if exists sp_var_test3_set;
drop procedure if exists sp_var_test4_set;
drop procedure if exists sp_var_test5_set;
drop procedure if exists sp_var_test6_set;
drop procedure if exists sp_var_test7_set;
drop procedure if exists sp_var_test8_set;
drop procedure if exists sp_var_test9_set;
drop procedure if exists sp_var_test10_set;
drop procedure if exists sp_var_test11_set;
drop procedure if exists sp_var_test12_set;
drop procedure if exists sp_var_test13_set;
drop procedure if exists sp_var_test14_set;
drop procedure if exists sp_var_test15_set;
drop procedure if exists sp_var_test16_set;
drop procedure if exists sp_var_test17_set;
drop procedure if exists sp_var_test18_set;
drop procedure if exists sp_var_test19_set;
drop procedure if exists sp_var_test20_set;
drop procedure if exists sp_var_test21_set;
drop procedure if exists sp_var_test22_set;
drop procedure if exists sp_var_test23_set;
drop procedure if exists sp_var_test24_set;
--enable_warnings

while($var_num <= 24) {
  eval call proc_codegen("sp_var_test", $var_num, "int", "10", "30", @body1, @body2);
  eval select @body1;
  eval select @body2;
  let $proc_body1 = `select @body1`;
  let $proc_body2 = `select @body2`;
  eval $proc_body1;
  eval $proc_body2;
  inc $var_num;
}

call sp_var_test1();
call sp_var_test2();
call sp_var_test3();
call sp_var_test4();
call sp_var_test5();
call sp_var_test6();
call sp_var_test7();
call sp_var_test8();
call sp_var_test9();
call sp_var_test10();
call sp_var_test11();
call sp_var_test12();
call sp_var_test13();
call sp_var_test14();
call sp_var_test15();
call sp_var_test16();
call sp_var_test17();
call sp_var_test18();
call sp_var_test19();
call sp_var_test20();
call sp_var_test21();
call sp_var_test22();
call sp_var_test23();
call sp_var_test24();

select * from result;

drop procedure sp_var_test1;
drop procedure sp_var_test2;
drop procedure sp_var_test3;
drop procedure sp_var_test4;
drop procedure sp_var_test5;
drop procedure sp_var_test6;
drop procedure sp_var_test7;
drop procedure sp_var_test8;
drop procedure sp_var_test9;
drop procedure sp_var_test10;
drop procedure sp_var_test11;
drop procedure sp_var_test12;
drop procedure sp_var_test13;
drop procedure sp_var_test14;
drop procedure sp_var_test15;
drop procedure sp_var_test16;
drop procedure sp_var_test17;
drop procedure sp_var_test18;
drop procedure sp_var_test19;
drop procedure sp_var_test20;
drop procedure sp_var_test21;
drop procedure sp_var_test22;
drop procedure sp_var_test23;
drop procedure sp_var_test24;

drop procedure sp_var_test1_set;
drop procedure sp_var_test2_set;
drop procedure sp_var_test3_set;
drop procedure sp_var_test4_set;
drop procedure sp_var_test5_set;
drop procedure sp_var_test6_set;
drop procedure sp_var_test7_set;
drop procedure sp_var_test8_set;
drop procedure sp_var_test9_set;
drop procedure sp_var_test10_set;
drop procedure sp_var_test11_set;
drop procedure sp_var_test12_set;
drop procedure sp_var_test13_set;
drop procedure sp_var_test14_set;
drop procedure sp_var_test15_set;
drop procedure sp_var_test16_set;
drop procedure sp_var_test17_set;
drop procedure sp_var_test18_set;
drop procedure sp_var_test19_set;
drop procedure sp_var_test20_set;
drop procedure sp_var_test21_set;
drop procedure sp_var_test22_set;
drop procedure sp_var_test23_set;
drop procedure sp_var_test24_set;

drop table result;
drop procedure proc_codegen;











