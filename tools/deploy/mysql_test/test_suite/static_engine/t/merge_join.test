# owner: xiaoyi.xy
# owner group: sql2
# tags: optimizer
--result_format 4
--explain_protocol 2

connect (conn_admin, $OBMYSQL_MS0,admin,$OBMYSQL_PWD,test,$OBMYSQL_PORT);
connection conn_admin;

connection default;

--disable_warnings
drop table if exists pk_t, t1, t2, t3, t4;
--enable_warnings

create table pk_t(pk int primary key, c2 int);
create table t1(c1 int, c2 int);
create table t2(c1 int, c2 int);
create table t3(c1 int, c2 int);
create table t4(c1 int, c2 int);
insert/*trace*/ into pk_t values(2,2),(3,3), (6,6), (7, 7);
insert/*trace*/ into t1 values(NULL, 8), (NULL, 8), (2,2),(2,2), (3,3), (3,3), (4,4), (4,4),(7,7),(7, 7);
insert/*trace*/ into t2 values(NULL, 3),(1, 1), (1,1), (2,2), (3,3), (6,6),(6,6),(9,9), (10,10);
insert/*trace*/ into t3 values(1,3), (2,2);
insert/*trace*/ into t4 values(1,2), (1,2), (2,3);

connection conn_admin;
connection default;
set @@ob_enable_plan_cache = 0;

--echo
--echo ********* basic merge join
select /*+use_merge(t1 t2)*/ * from t1, t2 where t1.c1 = t2.c1;
--echo
select /*+use_merge(t1 t2)*/ * from t1 left join t2 on t1.c1 = t2.c1;
--echo
select /*+use_merge(t1 t2)*/ * from t1 right join t2 on t1.c1 = t2.c1;
--echo
select /*+use_merge(t1 t2)*/ * from t1 full join t2 on t1.c1 = t2.c1;
--echo
select /*+use_merge(t1 t2)*/ * from t1 where exists(select 1 from t2 where t1.c1 = t2.c1);
--echo
select /*+use_merge(t1 t2)*/ * from t1 where not exists(select 1 from t2 where t1.c1 = t2.c1);


--echo
--echo ********* nullsafe equal condition
select /*+use_merge(t1 t2)*/ * from t1, t2 where t1.c1 <=> t2.c1;
--echo
select /*+use_merge(t1 t2)*/ * from t1 left join t2 on t1.c1 <=> t2.c1;
--echo
select /*+use_merge(t1 t2)*/ * from t1 right join t2 on t1.c1 <=> t2.c1;
--echo
select /*+use_merge(t1 t2)*/ * from t1 full join t2 on t1.c1 <=> t2.c1;
--echo
select /*+use_merge(t1 t2)*/ * from t1 where exists(select 1 from t2 where t1.c1 <=> t2.c1);
--echo
select /*+use_merge(t1 t2)*/ * from t1 where not exists(select 1 from t2 where t1.c1 <=> t2.c1);

--echo
--echo ********  contain other condition
select /*+use_merge(t1 t2)*/ * from t1, t2 where t1.c1 = t2.c1 and t1.c2 * t2.c2 < 10;
--echo
select /*+use_merge(t1 t2)*/ * from t1 left join t2 on t1.c1 = t2.c1 and t1.c2 * t2.c2 < 10;
--echo
select /*+use_merge(t1 t2)*/ * from t1 right join t2 on t1.c1 = t2.c1 and t1.c2 * t2.c2 < 10;
--echo
select /*+use_merge(t1 t2)*/ * from t1 full join t2 on t1.c1 = t2.c1 and t1.c2 * t2.c2 < 10;
--echo
select /*+use_merge(t1 t2)*/ * from t1 where exists(select 1 from t2 where t1.c1 = t2.c1 and t1.c2 * t2.c2 < 10) ;
--echo
select /*+use_merge(t1 t2)*/ * from t1 where not exists(select 1 from t2 where t1.c1 = t2.c1 and t1.c2 * t2.c2 < 10) ;

--echo
--echo ************ equel condition表达式左右子表达式分别来自join operator的右边和左边
select /*+use_merge(t1 t2) leading(t1 t2)*/ * from t1, t2 where t2.c1 = t1.c1 and t1.c2 * t2.c2 < 10;
--echo
select /*+use_merge(t1 t2) leading(t1 t2)*/ * from t1 left join t2 on t2.c1 = t1.c1 and t1.c2 * t2.c2 < 10;
--echo
select /*+use_merge(t1 t2) leading(t1 t2)*/ * from t1 right join t2 on t2.c1 = t1.c1 and t1.c2 * t2.c2 < 10;
--echo
select /*+use_merge(t1 t2) leading(t1 t2)*/ * from t1 full join t2 on t2.c1 = t1.c1 and t1.c2 * t2.c2 < 10;
--echo
select /*+use_merge(t1 t2) leading(t1 t2)*/ * from t1 where exists(select 1 from t2 where t2.c1 = t1.c1 and t1.c2 * t2.c2 < 10) ;
--echo
select /*+use_merge(t1 t2) leading(t1 t2)*/ * from t1 where not exists(select 1 from t2 where t2.c1 = t1.c1 and t1.c2 * t2.c2 < 10) ;


--echo
--echo ******* 测试左表为唯一键时不需要进cache的场景, 仅支持inner join
select /*+use_merge(pk_t t2) leading(pk_t t2)*/ * from pk_t, t2 where pk_t.pk = t2.c1 and pk_t.c2 * t2.c2 < 10;

--echo ******* 测试不进cache， 且左边最后一行与右边最后一行匹配的场景
select /*+use_merge(pk_t t1) leading(pk_t t1)*/ * from pk_t, t1 where pk_t.pk = t1.c1;

--echo
select/*+use_merge(t3 t4) leading(t3 t4)*/ * from t3 left join t4 on t3.c1 = t4.c1 and t3.c2 < t4.c2;

drop table pk_t;
drop table t1;
drop table t2;
drop table t3;
drop table t4;

connection conn_admin;
--sleep 2
