# owner: gengli.wzy
# owner group: transaction
# description: 本case是为了测试在含未提交事务的状态下，多次minor merge的正确性

--disable_query_log
set @@session.explicit_defaults_for_timestamp=off;
--enable_query_log

connect (conn0,$OBMYSQL_MS0,admin,$OBMYSQL_PWD,oceanbase,$OBMYSQL_PORT);

let $__timeout_def__ = 600 * 1000 * 1000;

connect (conn1,$OBMYSQL_MS0,$OBMYSQL_USR,$OBMYSQL_PWD,test,$OBMYSQL_PORT);
connection conn1;
eval set SESSION ob_query_timeout = $__timeout_def__;
eval set SESSION ob_trx_timeout = $__timeout_def__;
eval set SESSION ob_trx_idle_timeout = $__timeout_def__;

connect (conn2,$OBMYSQL_MS0,$OBMYSQL_USR,$OBMYSQL_PWD,test,$OBMYSQL_PORT);
eval set SESSION ob_query_timeout = $__timeout_def__;
eval set SESSION ob_trx_timeout = $__timeout_def__;
eval set SESSION ob_trx_idle_timeout = $__timeout_def__;
sleep 2;

connection conn1;
alter system set minor_compact_trigger = 10;
sleep 2;

connection conn1;
--disable_warnings
drop table if exists test_multi_minor_merge_t;
--enable_warnings

create table test_multi_minor_merge_t(num int, str varchar(50), tag int);
let $__freeze_table_name__ = 'test_multi_minor_merge_t';

connection conn0;
let $__tenant_id__=query_get_value(select /*+QUERY_TIMEOUT(10000000)*/ tenant_id from oceanbase.__all_virtual_table where table_name= $__freeze_table_name__, tenant_id, 1);
let $__table_id__=query_get_value(select /*+QUERY_TIMEOUT(10000000)*/ table_id from oceanbase.__all_virtual_table where table_name= $__freeze_table_name__, table_id, 1);
let $__svr_cnt__=query_get_value(select /*+QUERY_TIMEOUT(10000000)*/ count(*) as c from oceanbase.__all_server, c, 1);

connection conn1;
begin;
let $_i_ = 200;
while ($_i_ > 120)
{
  eval insert into test_multi_minor_merge_t values($_i_, 'Hello OceanBase & Happy New Year', 1);
  dec $_i_;
}

connection conn1;
--source mysql_test/include/minor_freeze_tablet_and_wait_done.inc

connection conn1;
while ($_i_ > 80)
{
  eval insert into test_multi_minor_merge_t values($_i_, 'Hello OceanBase & Happy New Year', 1);
  dec $_i_;
}

connection conn1;
--source mysql_test/include/minor_freeze_tablet_and_wait_done.inc

connection conn1;
while ($_i_ > 40)
{
  eval insert into test_multi_minor_merge_t values($_i_, 'Hello OceanBase & Happy New Year', 1);
  dec $_i_;
}

connection conn1;
--source mysql_test/include/minor_freeze_tablet_and_wait_done.inc

let $__now_time__ = query_get_value(select now() as c, c, 1);
alter system set minor_compact_trigger = 1;
--source mysql_test/include/wait_mini_minor_merge_for_table.inc

connection conn2;
# 不同事务查询sstable未提交数据
select * from test_multi_minor_merge_t;

connection conn1;
#同一事务查询sstable未提交数据
select * from test_multi_minor_merge_t where num > 190;

connection conn1;
while ($_i_ > 0)
{
  eval insert into test_multi_minor_merge_t values($_i_, 'Hello OceanBase & Happy New Year', 1);
  dec $_i_;
}

connection conn1;
alter system minor freeze;
--source mysql_test/include/wait_minor_merge.inc

connection conn1;
commit;

#查sstable未提交数据，但事务已提交
select * from test_multi_minor_merge_t where num > 190;

connection conn2;
select count(*) from test_multi_minor_merge_t;

drop table test_multi_minor_merge_t;
alter system set minor_compact_trigger = 2;