// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/oceanbase/configserver/ent/obcluster"
	"github.com/oceanbase/configserver/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	obclusterFields := schema.ObCluster{}.Fields()
	_ = obclusterFields
	// obclusterDescCreateTime is the schema descriptor for create_time field.
	obclusterDescCreateTime := obclusterFields[0].Descriptor()
	// obcluster.DefaultCreateTime holds the default value on creation for the create_time field.
	obcluster.DefaultCreateTime = obclusterDescCreateTime.Default.(func() time.Time)
	// obclusterDescUpdateTime is the schema descriptor for update_time field.
	obclusterDescUpdateTime := obclusterFields[1].Descriptor()
	// obcluster.DefaultUpdateTime holds the default value on creation for the update_time field.
	obcluster.DefaultUpdateTime = obclusterDescUpdateTime.Default.(func() time.Time)
	// obcluster.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	obcluster.UpdateDefaultUpdateTime = obclusterDescUpdateTime.UpdateDefault.(func() time.Time)
	// obclusterDescObClusterID is the schema descriptor for ob_cluster_id field.
	obclusterDescObClusterID := obclusterFields[3].Descriptor()
	// obcluster.ObClusterIDValidator is a validator for the "ob_cluster_id" field. It is called by the builders before save.
	obcluster.ObClusterIDValidator = obclusterDescObClusterID.Validators[0].(func(int64) error)
}
